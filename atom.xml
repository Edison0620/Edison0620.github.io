<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>壹拾肆</title>
  <icon>https://www.kaaaaai.cn/icon.png</icon>
  <subtitle>有些安排是多余的 这片空旷对我有益</subtitle>
  <link href="https://www.kaaaaai.cn/atom.xml" rel="self"/>
  
  <link href="https://www.kaaaaai.cn/"/>
  <updated>2021-02-22T08:25:58.000Z</updated>
  <id>https://www.kaaaaai.cn/</id>
  
  <author>
    <name>Kaaaaai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>翻译：Why use dependency injection</title>
    <link href="https://www.kaaaaai.cn/translation-why-use-dependency-injection.html"/>
    <id>https://www.kaaaaai.cn/translation-why-use-dependency-injection.html</id>
    <published>2021-02-22T01:37:05.000Z</published>
    <updated>2021-02-22T08:25:58.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;原文来自：&lt;a href=&quot;https://github.com/uber/needle/blob/master/WHY_DI.md&quot;&gt;Why use dependency injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;第一次翻译，如有问题还请留言指出。&lt;br&gt;E-mail：&lt;a href=&quot;mailto:&amp;#114;&amp;#111;&amp;#x6f;&amp;#116;&amp;#64;&amp;#107;&amp;#x61;&amp;#97;&amp;#97;&amp;#x61;&amp;#97;&amp;#105;&amp;#x2e;&amp;#x63;&amp;#110;&quot;&gt;&amp;#114;&amp;#111;&amp;#x6f;&amp;#116;&amp;#64;&amp;#107;&amp;#x61;&amp;#97;&amp;#97;&amp;#x61;&amp;#97;&amp;#105;&amp;#x2e;&amp;#x63;&amp;#110;&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="GitHub" scheme="https://www.kaaaaai.cn/tags/GitHub/"/>
    
    <category term="Translation" scheme="https://www.kaaaaai.cn/tags/Translation/"/>
    
  </entry>
  
  <entry>
    <title>是时候维护一个属于自己的开源库了</title>
    <link href="https://www.kaaaaai.cn/its-time-to-build-an-open-source-library.html"/>
    <id>https://www.kaaaaai.cn/its-time-to-build-an-open-source-library.html</id>
    <published>2020-11-21T01:37:05.000Z</published>
    <updated>2020-11-28T01:41:36.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;使用 GitHub 很久，除了无脑 star、fork 大神们的仓库、输出一些学习代码以外，对于 GitHub 本身的贡献似乎寥寥。&lt;a href=&quot;https://archiveprogram.github.com/arctic-vault/&quot;&gt;&lt;strong&gt;Arctic Code Vault Contributor&lt;/strong&gt;&lt;/a&gt; 的勋章我受之有愧。如果你也有和我类似的想法，那么，是时候可以尝试一下维护一个自己的开源库了。&lt;/p&gt;
&lt;p&gt;维护一个开源库，听起来很简单，但是真正要开始动手，似乎颇有些千头万绪，无从下手。那让我们来捋一捋，首先我们碰到的第一个问题可能是：我们可以去维护一个怎样的开源库？&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="OpenSource" scheme="https://www.kaaaaai.cn/tags/OpenSource/"/>
    
    <category term="GitHub" scheme="https://www.kaaaaai.cn/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>iOS 端豆瓣开源许可提到的库</title>
    <link href="https://www.kaaaaai.cn/ios-douban-open-source-license-mentioned-in-the-library.html"/>
    <id>https://www.kaaaaai.cn/ios-douban-open-source-license-mentioned-in-the-library.html</id>
    <published>2020-10-31T03:24:52.000Z</published>
    <updated>2022-03-30T02:56:57.396Z</updated>
    
    
    <summary type="html">在网上看到一篇[豆瓣开源许可-android](https://juejin.im/post/6844903749949865991)的文章，列举了一些 `Android` 端豆瓣开源许可中所提到的第三方框架...</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="OpenSource" scheme="https://www.kaaaaai.cn/tags/OpenSource/"/>
    
  </entry>
  
  <entry>
    <title>推荐几个播客节目</title>
    <link href="https://www.kaaaaai.cn/recommend-a-few-podcasts.html"/>
    <id>https://www.kaaaaai.cn/recommend-a-few-podcasts.html</id>
    <published>2020-10-26T05:24:52.000Z</published>
    <updated>2022-03-30T03:22:20.186Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;因为最近有点用眼过度，所以在空闲时间想找一件尽量可以不用到眼睛又能涨知识的事情做。我先想到的其实是听书和听线上的付费课程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;听书&lt;/strong&gt;不太习惯，原因是许多原本通过看书看到的书面语，从看到变为听到，在从声音转换成画面的这个过渡里，总会有因为追不上朗读者稳定而平均的朗读速度而造成的空白。有时思绪想在某些段落稍作停留，有时又因为对当前段落的后续发展有了预见性的推测，想快点赶往下一章节，总之因为听书的方式相比较看书，缺乏一种主动可控的速度变换，而经常有一种错位的感觉。&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.kaaaaai.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="播客" scheme="https://www.kaaaaai.cn/tags/%E6%92%AD%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>iOS 自动化打包上传 AppleStore、fir.im，并发邮件通知测试人员</title>
    <link href="https://www.kaaaaai.cn/ios-automated-packaging-complicated-by-mail.html"/>
    <id>https://www.kaaaaai.cn/ios-automated-packaging-complicated-by-mail.html</id>
    <published>2020-10-19T03:24:52.000Z</published>
    <updated>2020-11-22T07:22:49.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/10/19/XKmLbdSTGNoWYZl.png&quot; alt=&quot;Exp-w1832&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上图可以看出使用自动化出包，可以优化掉好几个需要人工介入的步骤，优化开发流程，节省开发者的时间。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="Xcode" scheme="https://www.kaaaaai.cn/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>业余剪辑自我修养</title>
    <link href="https://www.kaaaaai.cn/amateur-clipsself-improvement.html"/>
    <id>https://www.kaaaaai.cn/amateur-clipsself-improvement.html</id>
    <published>2020-10-02T01:24:52.000Z</published>
    <updated>2020-10-25T13:31:55.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;陆陆续续的剪了不少视频，在过程中也有一点收获，遂做个笔记，也做分享。&lt;/p&gt;
&lt;h2 id=&quot;剪辑软件的选择&quot;&gt;&lt;a href=&quot;#剪辑软件的选择&quot; class=&quot;headerlink&quot; title=&quot;剪辑软件的选择&quot;&gt;&lt;/a&gt;剪辑软件的选择&lt;/h2&gt;</summary>
    
    
    
    <category term="工具" scheme="https://www.kaaaaai.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="视频剪辑" scheme="https://www.kaaaaai.cn/tags/%E8%A7%86%E9%A2%91%E5%89%AA%E8%BE%91/"/>
    
    <category term="Premiere Pro" scheme="https://www.kaaaaai.cn/tags/Premiere-Pro/"/>
    
  </entry>
  
  <entry>
    <title>技术调研模板</title>
    <link href="https://www.kaaaaai.cn/technology-research-template.html"/>
    <id>https://www.kaaaaai.cn/technology-research-template.html</id>
    <published>2020-09-30T01:24:52.000Z</published>
    <updated>2022-03-30T03:25:39.841Z</updated>
    
    
    <summary type="html">部门小伙伴在做技术调研的时候，因为信息展示的格式不统一，或者没有注意在调研过程中抓取一些关键信息做展示和对比，为了方便，总结了一份技术调研模板，以供参考。</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="Technology" scheme="https://www.kaaaaai.cn/tags/Technology/"/>
    
    <category term="Template" scheme="https://www.kaaaaai.cn/tags/Template/"/>
    
  </entry>
  
  <entry>
    <title>有关熵减-时间旅行的冷门问题</title>
    <link href="https://www.kaaaaai.cn/frequently-asked-questions-about-time-travel-by-entropy-reduction.html"/>
    <id>https://www.kaaaaai.cn/frequently-asked-questions-about-time-travel-by-entropy-reduction.html</id>
    <published>2020-09-20T02:13:52.000Z</published>
    <updated>2022-04-02T01:47:43.290Z</updated>
    
    
    <summary type="html">上个礼拜去看了电影《信条》，综合来说给我感觉是瑜不掩瑕。</summary>
    
    
    
    <category term="旁白" scheme="https://www.kaaaaai.cn/categories/%E6%97%81%E7%99%BD/"/>
    
    
    <category term="随笔" scheme="https://www.kaaaaai.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="电影" scheme="https://www.kaaaaai.cn/tags/%E7%94%B5%E5%BD%B1/"/>
    
    <category term="观后感" scheme="https://www.kaaaaai.cn/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Swift - 权限请求封装</title>
    <link href="https://www.kaaaaai.cn/swift-permission-request-tools.html"/>
    <id>https://www.kaaaaai.cn/swift-permission-request-tools.html</id>
    <published>2020-09-12T02:24:52.000Z</published>
    <updated>2022-04-02T01:50:12.888Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;注意到工程里面关于权限请求这块的逻辑没有很好地管理起来，一些是用 OC 的工具类，一些是用 Swift 代码在一些 &lt;code&gt;ViewController&lt;/code&gt; 里面单独调用，不能复用，就想封装一个 Swift 版关于权限请求的工具类，虽然这个需求在 GitHub 上搜索也有很多现成的轮子，但使用起来感觉太重，而且有些久不维护，Swift 版本更新的又快，有些接口就不好使了，索性就自己封装一个。&lt;/p&gt;
&lt;p&gt;一开始的思路也是想通过枚举来创建不同权限字段，通过静态方法来实现请求，但是蓝牙权限和定位权限需要实例化对象，设置代理。当使用 &lt;code&gt;static&lt;/code&gt; 关键字来创建蓝牙和定位对象，当应用内有其他的业务也要使用蓝牙和定位对象时，代理响应就会有点问题。后面索性就用单例方法创建一个整体的权限管理对象，然后创建类方法，在类方法中自己调用自己。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="Swift" scheme="https://www.kaaaaai.cn/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>iOS - HMAC 加密算法和一个 MD5 加密的问题</title>
    <link href="https://www.kaaaaai.cn/ios-hmac-encryption-and-an-md5-problem.html"/>
    <id>https://www.kaaaaai.cn/ios-hmac-encryption-and-an-md5-problem.html</id>
    <published>2020-09-06T02:24:52.000Z</published>
    <updated>2020-09-12T03:54:35.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;最近阅读&quot;&gt;&lt;a href=&quot;#最近阅读&quot; class=&quot;headerlink&quot; title=&quot;最近阅读&quot;&gt;&lt;/a&gt;最近阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://swift.gg/2016/06/17/when-to-use-mutating-functions-in-swift-structs/&quot;&gt;Swift 结构体何时使用 mutating 函数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://juejin.im/post/6862898534857834510&quot;&gt;2020 年疫情之下 iOS 面试题总结篇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/tianhai110/article/details/6339565&quot;&gt;UML类图几种关系的总结&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="OC" scheme="https://www.kaaaaai.cn/tags/OC/"/>
    
    <category term="Swift" scheme="https://www.kaaaaai.cn/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>iOS - 一些蓝牙问题的解决</title>
    <link href="https://www.kaaaaai.cn/ios-some-question-about-bluetooth.html"/>
    <id>https://www.kaaaaai.cn/ios-some-question-about-bluetooth.html</id>
    <published>2020-08-15T02:24:52.000Z</published>
    <updated>2020-08-15T04:44:19.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;最近阅读&quot;&gt;&lt;a href=&quot;#最近阅读&quot; class=&quot;headerlink&quot; title=&quot;最近阅读&quot;&gt;&lt;/a&gt;最近阅读&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/44030213/whats-the-swift-best-practice-for-reusable-uialertcontroller-configuration-via-e&quot;&gt;通过枚举在 Swift 中实现 UIAlertController 的复用性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/FShd9WAMQdWU9Mp6eZR4rA&quot;&gt;一文看破Swift枚举本质&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/onepixel/articles/7674659.html&quot;&gt;十大经典排序算法（动图演示）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://daily.zhihu.com/story/9726758&quot;&gt;为什么人会变成「工作狂」？这算不算一种上瘾行为？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="OC" scheme="https://www.kaaaaai.cn/tags/OC/"/>
    
    <category term="Swift" scheme="https://www.kaaaaai.cn/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift - 顶部弹出框封装</title>
    <link href="https://www.kaaaaai.cn/swift-toppop-upboxencapsulation.html"/>
    <id>https://www.kaaaaai.cn/swift-toppop-upboxencapsulation.html</id>
    <published>2020-08-04T05:24:52.000Z</published>
    <updated>2022-04-02T01:51:11.820Z</updated>
    
    
    <summary type="html">抽空把项目里的顶部弹出框封装了一下。</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="Swift" scheme="https://www.kaaaaai.cn/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>被光放弃的人</title>
    <link href="https://www.kaaaaai.cn/a-person-abandoned-by-the-light.html"/>
    <id>https://www.kaaaaai.cn/a-person-abandoned-by-the-light.html</id>
    <published>2020-07-18T02:13:52.000Z</published>
    <updated>2020-11-01T02:30:18.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;看科幻小说常常会感到一种作为人类的自卑感，对于宇宙来说，我们只是其中数以亿计星球中的一个，即使拥有灿烂的文化和恢弘的历史，也一粒尘埃反射出的微弱光芒。&lt;/p&gt;
&lt;p&gt;而作为个体，虽然每个人都有自己引以为傲的事情，经历过的人和事、在事件中的感受，我们也因为所经历的这些事物成为了独一无二的个体。然而放在星空下，我们所珍视和热爱的，似乎也不太值得一提。甚至在灾难里，再深刻的痛苦也会失去他原来的分量。自卑感即源于此，个体只是历史的一个小注脚，而历史有只是宇宙中其中一个维度的部分片段，我们的所思所想所感，还存在什么意义吗？&lt;/p&gt;</summary>
    
    
    
    <category term="旁白" scheme="https://www.kaaaaai.cn/categories/%E6%97%81%E7%99%BD/"/>
    
    
    <category term="随笔" scheme="https://www.kaaaaai.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="电影" scheme="https://www.kaaaaai.cn/tags/%E7%94%B5%E5%BD%B1/"/>
    
    <category term="观后感" scheme="https://www.kaaaaai.cn/tags/%E8%A7%82%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>OC - 多代理的实现</title>
    <link href="https://www.kaaaaai.cn/oc-multi-delegate-implementation.html"/>
    <id>https://www.kaaaaai.cn/oc-multi-delegate-implementation.html</id>
    <published>2020-07-16T05:24:52.000Z</published>
    <updated>2020-11-05T02:18:20.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;一、背景&quot;&gt;&lt;a href=&quot;#一、背景&quot; class=&quot;headerlink&quot; title=&quot;一、背景&quot;&gt;&lt;/a&gt;一、背景&lt;/h2&gt;&lt;p&gt;迭代项目的时候碰到一个问题， 原因是负责的内容有一项是封装各大 AI 开放平台的 SDK 集成到一个 SDK 里，然后输出统一的接口，目的是为了可以在不同的 AI 中快速切换并使用。但由于之前输出给了兄弟公司使用，他们在一个音乐 SDK 中用语音 SDK 实现语音点歌的功能。然后当我的主应用同时使用两个 SDK 时，由于音乐 SDK 中实现了语音 SDK 的代理，所以我在上层再初始化语音 SDK 设置代理就不起作用。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="OC" scheme="https://www.kaaaaai.cn/tags/OC/"/>
    
  </entry>
  
  <entry>
    <title>我的 AIO-notion 工作流搭建</title>
    <link href="https://www.kaaaaai.cn/about-my-notion-workflow.html"/>
    <id>https://www.kaaaaai.cn/about-my-notion-workflow.html</id>
    <published>2020-06-07T05:24:52.000Z</published>
    <updated>2022-04-02T01:54:46.084Z</updated>
    
    
    <summary type="html">本文介绍的就是一个久（大概有那么一两年）经人们考验的笔记软件——Notion。</summary>
    
    
    
    <category term="工具" scheme="https://www.kaaaaai.cn/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="时间管理" scheme="https://www.kaaaaai.cn/tags/%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
    <category term="笔记软件" scheme="https://www.kaaaaai.cn/tags/%E7%AC%94%E8%AE%B0%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="Notion" scheme="https://www.kaaaaai.cn/tags/Notion/"/>
    
  </entry>
  
  <entry>
    <title>解决使用 GitPage 重定向多次问题</title>
    <link href="https://www.kaaaaai.cn/web-resolve-recirculation-errors.html"/>
    <id>https://www.kaaaaai.cn/web-resolve-recirculation-errors.html</id>
    <published>2020-05-30T09:24:52.000Z</published>
    <updated>2022-04-02T02:03:35.566Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;问题表现&quot;&gt;&lt;a href=&quot;#问题表现&quot; class=&quot;headerlink&quot; title=&quot;问题表现&quot;&gt;&lt;/a&gt;问题表现&lt;/h2&gt;&lt;p&gt;博客网站更换了 DNS 解析的服务商，访问出现以下问题。&lt;br&gt;&lt;img src=&quot;https://s2.loli.net/2022/04/02/QRqexU16yVaWFuY.jpg&quot; alt=&quot;03oBxi-20200530&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="Web" scheme="https://www.kaaaaai.cn/tags/Web/"/>
    
    <category term="Https" scheme="https://www.kaaaaai.cn/tags/Https/"/>
    
    <category term="DNS 解析" scheme="https://www.kaaaaai.cn/tags/DNS-%E8%A7%A3%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>Swift - ?和!的学习</title>
    <link href="https://www.kaaaaai.cn/swift-optional-and-unwrapping-learning.html"/>
    <id>https://www.kaaaaai.cn/swift-optional-and-unwrapping-learning.html</id>
    <published>2020-04-24T09:24:52.000Z</published>
    <updated>2020-11-21T02:09:49.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;p&gt;　　最近在优化一个项目的过程，过程中发现之前开发时由于刚接触 &lt;code&gt;Swift&lt;/code&gt; 的原因，在 &lt;code&gt;Swift&lt;/code&gt; 中的类里使用了很多 &lt;code&gt;OC&lt;/code&gt; 的写法，比如字典数组对象会习惯性用 &lt;code&gt;NSDictionary&lt;/code&gt;、&lt;code&gt;NSArray&lt;/code&gt;来初始化，而不是用 &lt;code&gt;[KeyType: ValueType]()&lt;/code&gt; 或是 &lt;code&gt;[SomeType]()&lt;/code&gt; 这种类型来实例化变量。虽然在使用上没有什么问题，但看起来多少有点。。。不优雅。&lt;br&gt;　　当我把大部分类型都修改成 &lt;code&gt;Swift&lt;/code&gt; 中的写法后（部分未修改是因为使用 &lt;code&gt;String&lt;/code&gt; 类型来给文本做截取和富文本定义，实在不如 &lt;code&gt;NSString&lt;/code&gt; 顺手，这种不顺手让我不由想起 Stack Overflow 上看到的一个评论：I thougt i already getting along well  with Swift.）发现，原来一些变量是否为空的判断中，使用 &lt;code&gt;Swift&lt;/code&gt; 里的 &lt;code&gt;optional&lt;/code&gt; 类型会方便很多。&lt;br&gt;　　比如解析一个 json 数据，如果层级多而且里面每个元素都是不确定的，那么可能就需要每个层级都判一次空。而如果使用 ? 来设置当前对象为可选值，只需要在最后一层实际使用到对象值时，判一次空就 OK 了。&lt;br&gt;　　对于 ? 和 ! 的区别和总结，网上有很多文章，在这里就不重复造轮子了。下面就对这个 &lt;code&gt;optional&lt;/code&gt; 的自己两个疑问做个记录。
　　&lt;/p&gt;
&lt;h2 id=&quot;和-！-是表示两种不同的类型吗，一种是可以为空，一种不可以为空？&quot;&gt;&lt;a href=&quot;#和-！-是表示两种不同的类型吗，一种是可以为空，一种不可以为空？&quot; class=&quot;headerlink&quot; title=&quot;? 和 ！ 是表示两种不同的类型吗，一种是可以为空，一种不可以为空？&quot;&gt;&lt;/a&gt;? 和 ！ 是表示两种不同的类型吗，一种是可以为空，一种不可以为空？&lt;/h2&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="Swift" scheme="https://www.kaaaaai.cn/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>《文学回忆录》读书笔记</title>
    <link href="https://www.kaaaaai.cn/literary-memoirs-reading-notes.html"/>
    <id>https://www.kaaaaai.cn/literary-memoirs-reading-notes.html</id>
    <published>2020-04-18T05:00:52.000Z</published>
    <updated>2020-11-05T02:21:02.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;《文学回忆录》&quot;&gt;&lt;a href=&quot;#《文学回忆录》&quot; class=&quot;headerlink&quot; title=&quot;《文学回忆录》&quot;&gt;&lt;/a&gt;《文学回忆录》&lt;/h2&gt;&lt;div align=&quot;right&quot;&gt; [木心](https://book.douban.com/subject/20440644/) &lt;/div&gt;</summary>
    
    
    
    <category term="剪报" scheme="https://www.kaaaaai.cn/categories/%E5%89%AA%E6%8A%A5/"/>
    
    
    <category term="读书笔记" scheme="https://www.kaaaaai.cn/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    <category term="中国近代文学" scheme="https://www.kaaaaai.cn/tags/%E4%B8%AD%E5%9B%BD%E8%BF%91%E4%BB%A3%E6%96%87%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>iOS - UITableview 阴影圆角共存</title>
    <link href="https://www.kaaaaai.cn/ios-uitableview-shadow-rounded-corners-coexist.html"/>
    <id>https://www.kaaaaai.cn/ios-uitableview-shadow-rounded-corners-coexist.html</id>
    <published>2020-04-11T02:24:52.000Z</published>
    <updated>2020-11-22T01:44:11.000Z</updated>
    
    
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;给 &lt;code&gt;UITableView&lt;/code&gt; 同时设置圆角和阴影时发现在视图上只会显示圆角，原因是因为当我们设置 &lt;code&gt;masksToBounds&lt;/code&gt; 为 &lt;code&gt;YES&lt;/code&gt; 允许圆角剪裁时，圆角以外的阴影也会一并被剪裁掉。在网上找了一下解决方法，&lt;a href=&quot;https://www.jianshu.com/p/48b1a601febf&quot;&gt;ios阴影圆角共存&lt;/a&gt; 这篇文章提供了一个思路，就是把圆角和阴影放在不同的两个控件上实现，然后叠加到一块。基本思路是正确的，但实际操作发现在最后插入作为阴影层的 &lt;code&gt;CALayer&lt;/code&gt;，调用的方法可能会照成层级有点混乱的问题。下面展示一下我解决这个问题的方法和用 Swift 实现的代码。&lt;/p&gt;</summary>
    
    
    
    <category term="笔记" scheme="https://www.kaaaaai.cn/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="EXP" scheme="https://www.kaaaaai.cn/tags/EXP/"/>
    
    <category term="iOS" scheme="https://www.kaaaaai.cn/tags/iOS/"/>
    
    <category term="Swift" scheme="https://www.kaaaaai.cn/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>上帝会掷几次骰子</title>
    <link href="https://www.kaaaaai.cn/god-will-rolls-the-dice-several-times.html"/>
    <id>https://www.kaaaaai.cn/god-will-rolls-the-dice-several-times.html</id>
    <published>2020-04-04T02:13:52.000Z</published>
    <updated>2020-11-22T01:38:52.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;</summary>
        
      
    
    
    
    <category term="旁白" scheme="https://www.kaaaaai.cn/categories/%E6%97%81%E7%99%BD/"/>
    
    
    <category term="随笔" scheme="https://www.kaaaaai.cn/tags/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="读后感" scheme="https://www.kaaaaai.cn/tags/%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    
  </entry>
  
</feed>
